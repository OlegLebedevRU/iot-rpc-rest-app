

server {
    ##
    # SSL Settings
    ##

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;
	listen 443 default_server ssl;
    listen [::]:443 ssl;
	server_name dev.leo4.ru;
	ssl_certificate /etc/nginx/ssl/live/dev.leo4.ru/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/dev.leo4.ru/privkey.pem;
		#ssl_certificate /etc/letsencrypt/live/dev.leo4.ru/fullchain.pem;
		#ssl_certificate_key /etc/letsencrypt/live/dev.leo4.ru/privkey.pem;
	## jwt on
	auth_jwt_enabled on;
    auth_jwt_algorithm 'RS256';
	auth_jwt_redirect off;
	auth_jwt_location HEADER=auth-token;
	auth_jwt_key "-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqX393A/1A+OW9ISPrWbK
/qodWp7xMd0clA7VwGoOK6fW0Q0m7iwUoBk6PfyaUZPToIlMMn07x3OR3Idf9rdH
ZBTxYaIVBOTAC3/a9uLMi/ElLf8u1xxNffByUEbWL6lMViQgoSkxh2zLckSyvsyH
S2TMrSh4Lcq8d+QOVupgh/dOguLn8BXgVHgLtsrGJ7DqL78mwbJ6emp+LV+zeUot
xT03UwxmgFKr1AZnRGZI1Zp/xEUSYc1hX9ZzrF01jiNi1ln3NNxTqCWxpnlICxhh
QNF68AUG012qLnykaKak+9TclImCG+i+Giuj+Qc5B4j6J46kfLVZA/Ra64ugTbZy
nQIDAQAB
-----END PUBLIC KEY-----";
	#auth_jwt_enabled on;
	#auth_jwt_algorithm 'RS256';
	#auth_jwt_redirect off;
	#auth_jwt_location HEADER=auth-token;  # get the JWT from the "auth-token" header
    #auth_jwt_location COOKIE=auth-token;  # get the JWT from the "auth-token" cookie
    #Set to a space-delimited list of claims to extract from the JWT and set as request headers. These will be accessible via e.g: $http_jwt_sub
    #auth_jwt_extract_request_claims orgId userId roleId;

	location /ssl-test {
	    auth_jwt_enabled off;
        add_header Content-Type text/html;
        return 200 '<html><body><h1>SSL TEST</h2></body></html>';
        #proxy_pass http://app;
    }
    location /jwt-test {

        add_header Content-Type text/html;
        return 200 '<html><body><h1>JWT, SSL TEST</h2></body></html>';
        #proxy_pass http://app;
    }
    location /rmq {
        auth_jwt_enabled off;
        proxy_pass http://rabbitmq:15672;
        rewrite ^/rmq(.*)$ $1 break;
    }
    #upstream app {
    #    server app1:3031/api/v1/;
    #}
    resolver 127.0.0.11 valid=10s;
    set $upstream http://app1:8000;
    location ~ ^/docs(.*)$ {
        auth_jwt_enabled off;
        proxy_pass $upstream/docs$1$is_args$args;
    }
    location /openapi.json {
        auth_jwt_enabled off;
        proxy_pass $upstream/openapi.json;
    }
    location ~ ^/api/v1/(.*)$ {
        proxy_pass $upstream/api/v1/$1$is_args$args;
    }

}

server {
    ##
    # SSL Settings
    ##
    auth_jwt_enabled off;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;
	listen 4443 ssl;
    listen [::]:4443 ssl;
	server_name dev.leo4.ru;
	ssl_certificate /crt/server_certificate.pem;
    ssl_certificate_key /crt/server_key.pem;
		#ssl_certificate /etc/letsencrypt/live/dev.leo4.ru/fullchain.pem;
		#ssl_certificate_key /etc/letsencrypt/live/dev.leo4.ru/privkey.pem;
	ssl_verify_client on;
    ssl_trusted_certificate /crt/ca_certificate.pem;

	location /ssl-mutual-test {

        add_header Content-Type text/html;
        return 200 "<html><body><h1>SSL Mutual -  TEST</h2> $ssl_client_s_dn</body></html>";
        #proxy_pass http://app;
    }

}